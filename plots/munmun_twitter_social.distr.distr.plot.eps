%!PS-Adobe-2.0 EPSF-2.0
%%Title: _out_distr.plot
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Tue Sep 26 02:41:52 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 3 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (_out_distr.plot)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (luca)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Sep 26 02:41:52 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1206 576 M
5669 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1206 576 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1206 789 M
31 0 V
5638 0 R
-31 0 V
1206 1071 M
31 0 V
5638 0 R
-31 0 V
1206 1215 M
31 0 V
5638 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1206 1284 M
5669 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1206 1284 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 1284 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1206 1497 M
31 0 V
5638 0 R
-31 0 V
1206 1779 M
31 0 V
5638 0 R
-31 0 V
1206 1923 M
31 0 V
5638 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1206 1992 M
5669 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1206 1992 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 1992 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1206 2205 M
31 0 V
5638 0 R
-31 0 V
1206 2486 M
31 0 V
5638 0 R
-31 0 V
1206 2631 M
31 0 V
5638 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1206 2700 M
5669 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1206 2700 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 2700 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1206 2913 M
31 0 V
5638 0 R
-31 0 V
1206 3194 M
31 0 V
5638 0 R
-31 0 V
1206 3339 M
31 0 V
5638 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1206 3407 M
5669 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1206 3407 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 3407 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1206 3620 M
31 0 V
5638 0 R
-31 0 V
1206 3902 M
31 0 V
5638 0 R
-31 0 V
1206 4047 M
31 0 V
5638 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1206 4115 M
5669 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1206 4115 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 4115 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1206 4328 M
31 0 V
5638 0 R
-31 0 V
1206 4610 M
31 0 V
5638 0 R
-31 0 V
1206 4754 M
31 0 V
5638 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1206 4823 M
5669 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1206 4823 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 4823 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1x10)]
[(Helvetica) 144.0 90.0 true true 0 (6)]
] -78.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1206 576 M
0 63 V
0 4184 R
0 -63 V
stroke
1206 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1775 576 M
0 31 V
0 4216 R
0 -31 V
2108 576 M
0 31 V
0 4216 R
0 -31 V
2344 576 M
0 31 V
0 4216 R
0 -31 V
2527 576 M
0 31 V
0 4216 R
0 -31 V
2676 576 M
0 31 V
0 4216 R
0 -31 V
2803 576 M
0 31 V
0 4216 R
0 -31 V
2913 576 M
0 31 V
0 4216 R
0 -31 V
3009 576 M
0 31 V
0 4216 R
0 -31 V
3096 576 M
0 63 V
0 4184 R
0 -63 V
stroke
3096 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3665 576 M
0 31 V
0 4216 R
0 -31 V
3997 576 M
0 31 V
0 4216 R
0 -31 V
4233 576 M
0 31 V
0 4216 R
0 -31 V
4416 576 M
0 31 V
0 4216 R
0 -31 V
4566 576 M
0 31 V
0 4216 R
0 -31 V
4693 576 M
0 31 V
0 4216 R
0 -31 V
4802 576 M
0 31 V
0 4216 R
0 -31 V
4899 576 M
0 31 V
0 4216 R
0 -31 V
4985 576 M
0 63 V
0 4184 R
0 -63 V
stroke
4985 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5554 576 M
0 31 V
0 4216 R
0 -31 V
5887 576 M
0 31 V
0 4216 R
0 -31 V
6123 576 M
0 31 V
0 4216 R
0 -31 V
6306 576 M
0 31 V
0 4216 R
0 -31 V
6456 576 M
0 31 V
0 4216 R
0 -31 V
6582 576 M
0 31 V
0 4216 R
0 -31 V
6692 576 M
0 31 V
0 4216 R
0 -31 V
6789 576 M
0 31 V
0 4216 R
0 -31 V
6875 576 M
0 63 V
0 4184 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1000)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1206 4823 N
0 -4247 V
5669 0 V
0 4247 V
-5669 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
144 2699 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Nodes)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
4040 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (Degree)]
] -60.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C 1206 4502 PentF
1775 3949 PentF
2108 3625 PentF
2344 3400 PentF
2527 3211 PentF
2676 3081 PentF
2803 2972 PentF
2913 2879 PentF
3009 2776 PentF
3096 2727 PentF
3174 2637 PentF
3245 2590 PentF
3311 2526 PentF
3372 2483 PentF
3428 2400 PentF
3481 2387 PentF
3531 2326 PentF
3578 2303 PentF
3622 2240 PentF
3665 2218 PentF
3705 2212 PentF
3743 2144 PentF
3779 2158 PentF
3814 2097 PentF
3848 2086 PentF
3880 2077 PentF
3911 1989 PentF
3941 2010 PentF
3969 1966 PentF
3997 1952 PentF
4024 1899 PentF
4050 1869 PentF
4075 1886 PentF
4100 1919 PentF
4124 1850 PentF
4147 1835 PentF
4169 1819 PentF
4191 1766 PentF
4213 1808 PentF
4233 1766 PentF
4254 1732 PentF
4273 1791 PentF
4293 1694 PentF
4312 1622 PentF
4330 1779 PentF
4348 1766 PentF
4366 1725 PentF
4383 1600 PentF
4400 1512 PentF
4416 1686 PentF
4433 1540 PentF
4449 1600 PentF
4464 1669 PentF
4480 1566 PentF
4495 1589 PentF
4509 1481 PentF
4524 1481 PentF
4538 1387 PentF
4552 1251 PentF
4566 1481 PentF
4580 1387 PentF
4593 1497 PentF
4606 1447 PentF
4619 1364 PentF
4632 1313 PentF
4644 1215 PentF
4657 1284 PentF
4669 1387 PentF
4681 1364 PentF
4693 1215 PentF
4704 1364 PentF
4716 1313 PentF
4727 1174 PentF
4738 1215 PentF
4749 1284 PentF
4760 1313 PentF
4771 1251 PentF
4781 1215 PentF
4792 1071 PentF
4802 1215 PentF
4812 1215 PentF
4822 1127 PentF
4832 1340 PentF
4842 1071 PentF
4852 1002 PentF
4862 1127 PentF
4871 1251 PentF
4880 1071 PentF
4890 1174 PentF
4899 1174 PentF
4908 1002 PentF
4917 1127 PentF
4926 1127 PentF
4935 1127 PentF
4943 1071 PentF
4952 1251 PentF
4960 1127 PentF
4969 1215 PentF
4977 914 PentF
4985 914 PentF
4993 914 PentF
5002 914 PentF
5010 1174 PentF
5018 1127 PentF
5025 1071 PentF
5033 1071 PentF
5041 1127 PentF
5048 789 PentF
5056 1284 PentF
5064 914 PentF
5071 1174 PentF
5078 1002 PentF
5086 914 PentF
5093 789 PentF
5100 1002 PentF
5107 789 PentF
5121 1002 PentF
5128 1002 PentF
5135 789 PentF
5142 1127 PentF
5149 914 PentF
5155 789 PentF
5162 1071 PentF
5168 576 PentF
5175 914 PentF
5181 789 PentF
5188 914 PentF
5194 1071 PentF
5201 789 PentF
5207 576 PentF
5213 1002 PentF
5219 1002 PentF
5226 789 PentF
5232 1071 PentF
5238 914 PentF
5244 914 PentF
5250 576 PentF
5256 914 PentF
5261 789 PentF
5267 914 PentF
5273 1002 PentF
5279 1071 PentF
5285 789 PentF
5290 1127 PentF
5296 576 PentF
5302 576 PentF
5307 789 PentF
5313 789 PentF
5318 914 PentF
5324 789 PentF
5329 789 PentF
5334 914 PentF
5340 576 PentF
5345 789 PentF
5350 789 PentF
5356 789 PentF
5361 576 PentF
5366 789 PentF
5371 789 PentF
5376 576 PentF
5381 789 PentF
5386 914 PentF
5391 914 PentF
5396 914 PentF
5401 1002 PentF
5406 789 PentF
5411 576 PentF
5416 1002 PentF
5421 576 PentF
5430 914 PentF
5435 789 PentF
5440 1002 PentF
5449 1002 PentF
5454 789 PentF
5459 789 PentF
5468 1127 PentF
5472 1002 PentF
5477 1002 PentF
5481 576 PentF
5486 789 PentF
5490 789 PentF
5495 1002 PentF
5499 789 PentF
5503 576 PentF
5508 789 PentF
5516 914 PentF
5521 1002 PentF
5525 789 PentF
5529 576 PentF
5533 914 PentF
5538 789 PentF
5542 576 PentF
5554 914 PentF
5558 789 PentF
5562 789 PentF
5570 789 PentF
5574 576 PentF
5582 576 PentF
5586 789 PentF
5590 914 PentF
5594 789 PentF
5610 576 PentF
5614 576 PentF
5617 789 PentF
5621 576 PentF
5625 789 PentF
5629 789 PentF
5632 789 PentF
5640 914 PentF
5644 914 PentF
5647 789 PentF
5651 914 PentF
5654 576 PentF
5658 789 PentF
5662 914 PentF
5665 789 PentF
5669 576 PentF
5672 1002 PentF
5676 914 PentF
5683 576 PentF
5687 789 PentF
5693 576 PentF
5697 914 PentF
5700 576 PentF
5704 576 PentF
5707 576 PentF
5714 576 PentF
5717 576 PentF
5721 914 PentF
5724 789 PentF
5734 1071 PentF
5737 576 PentF
5741 914 PentF
5744 576 PentF
5747 576 PentF
5757 576 PentF
5760 576 PentF
5763 1002 PentF
5766 789 PentF
5769 789 PentF
5773 1071 PentF
5776 789 PentF
5782 576 PentF
5785 789 PentF
5788 789 PentF
5791 576 PentF
5794 914 PentF
5797 789 PentF
5804 576 PentF
5807 576 PentF
5810 576 PentF
5813 789 PentF
5816 576 PentF
5819 914 PentF
5824 1127 PentF
5827 576 PentF
5830 576 PentF
5833 576 PentF
5836 914 PentF
5839 914 PentF
5845 576 PentF
5848 576 PentF
5853 576 PentF
5856 789 PentF
5859 576 PentF
5862 789 PentF
5868 576 PentF
5870 914 PentF
5879 914 PentF
5881 789 PentF
5884 576 PentF
5890 576 PentF
5892 576 PentF
5903 1002 PentF
5906 576 PentF
5909 914 PentF
5914 914 PentF
5919 576 PentF
5927 576 PentF
5930 576 PentF
5937 576 PentF
5940 576 PentF
5942 576 PentF
5945 789 PentF
5948 1071 PentF
5950 576 PentF
5953 914 PentF
5955 576 PentF
5958 789 PentF
5963 914 PentF
5965 576 PentF
5970 914 PentF
5973 789 PentF
5975 576 PentF
5977 789 PentF
5982 789 PentF
5985 789 PentF
5987 576 PentF
5990 789 PentF
6002 789 PentF
6004 789 PentF
6011 789 PentF
6013 576 PentF
6020 576 PentF
6023 576 PentF
6027 576 PentF
6030 789 PentF
6037 789 PentF
6039 576 PentF
6041 576 PentF
6046 576 PentF
6048 914 PentF
6050 789 PentF
6052 576 PentF
6055 576 PentF
6059 576 PentF
6061 914 PentF
6066 576 PentF
6068 789 PentF
6070 576 PentF
6072 789 PentF
6079 576 PentF
6081 914 PentF
6085 789 PentF
6087 789 PentF
6090 914 PentF
6092 1002 PentF
6094 576 PentF
6096 576 PentF
6098 789 PentF
6100 789 PentF
6102 576 PentF
6104 914 PentF
6106 914 PentF
6109 789 PentF
6111 576 PentF
6113 576 PentF
6115 789 PentF
6117 914 PentF
6119 576 PentF
6121 1071 PentF
6123 789 PentF
6125 576 PentF
6127 576 PentF
6131 789 PentF
6133 1002 PentF
6135 1002 PentF
6137 576 PentF
6139 789 PentF
6141 789 PentF
6143 914 PentF
6145 576 PentF
6147 576 PentF
6149 914 PentF
6151 1002 PentF
6153 789 PentF
6155 576 PentF
6157 1071 PentF
6159 789 PentF
6161 789 PentF
6163 789 PentF
6165 1071 PentF
6167 1071 PentF
6169 1127 PentF
6171 576 PentF
6173 1071 PentF
6175 1002 PentF
6177 1174 PentF
6180 1071 PentF
6182 789 PentF
6184 1251 PentF
6186 1127 PentF
6188 914 PentF
6190 914 PentF
6192 1251 PentF
6194 914 PentF
6196 1284 PentF
6198 1002 PentF
6199 1002 PentF
6201 1174 PentF
6203 1127 PentF
6205 1340 PentF
6207 914 PentF
6209 1251 PentF
6211 1215 PentF
6212 1215 PentF
6214 914 PentF
6216 1215 PentF
6218 1313 PentF
6220 1071 PentF
6222 1174 PentF
6223 1002 PentF
6225 1313 PentF
6227 1127 PentF
6229 1127 PentF
6231 1071 PentF
6232 1071 PentF
6234 1215 PentF
6236 1215 PentF
6238 1251 PentF
6240 1465 PentF
6241 1002 PentF
6243 1284 PentF
6245 1127 PentF
6247 1313 PentF
6248 1127 PentF
6250 1408 PentF
6252 1174 PentF
6254 1215 PentF
6255 1428 PentF
6257 1251 PentF
6259 1364 PentF
6261 1428 PentF
6262 1340 PentF
6264 1387 PentF
6266 1481 PentF
6268 1387 PentF
6269 1408 PentF
6271 1408 PentF
6273 1553 PentF
6274 1465 PentF
6276 1447 PentF
6278 1512 PentF
6279 1497 PentF
6281 1660 PentF
6283 1669 PentF
6285 1622 PentF
6286 1589 PentF
6288 1669 PentF
6290 1589 PentF
6291 1710 PentF
6293 1651 PentF
6295 1686 PentF
6296 1669 PentF
6298 1651 PentF
6300 1660 PentF
6301 1660 PentF
6303 1746 PentF
6305 1725 PentF
6306 1760 PentF
6308 1611 PentF
6309 1678 PentF
6311 1589 PentF
6313 1553 PentF
6314 1481 PentF
6316 1408 PentF
6318 1284 PentF
6319 1340 PentF
6321 1284 PentF
6322 1284 PentF
6324 1251 PentF
6326 1313 PentF
6327 914 PentF
6329 1127 PentF
6330 1002 PentF
6332 1127 PentF
6334 1002 PentF
6335 789 PentF
6337 1127 PentF
6338 914 PentF
6340 789 PentF
6341 576 PentF
6343 914 PentF
6345 914 PentF
6346 576 PentF
6348 914 PentF
6351 576 PentF
6354 576 PentF
6359 789 PentF
6360 1002 PentF
6363 576 PentF
6365 576 PentF
6368 576 PentF
6372 576 PentF
6375 576 PentF
6378 576 PentF
6380 576 PentF
6392 576 PentF
6396 576 PentF
6401 789 PentF
6442 576 PentF
6446 576 PentF
6480 576 PentF
6556 576 PentF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1206 4823 N
0 -4247 V
5669 0 V
0 4247 V
-5669 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
